{"version":3,"sources":["map/Grid.tsx","map/Group.tsx","map/Chapter.tsx","OldGrid.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Grid","props","length","onClick","onContextMenu","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","Array","fill","undefined","map","v","i","block","blockXY","x","y","className","transform","w","h","style","dominantBaseline","width","height","e","preventDefault","clamp","value","min","max","Math","Group","group","groupDimension","updateGroup","start","end","inGroup","blockOf","blocks","push","onWheel","deltaY","s","deltaX","l","x1","y1","x2","y2","stroke","randomInt","floor","random","newGroup","id","Chapter","useState","groups","setGroups","drag","setDrag","dragStart","dragEnd","useEffect","window","addEventListener","addGroup","updateDrag","old","console","log","index","slice","blockSelected","OldGrid","arr","selected","setSelected","areConnected","a","b","bigger","incElement","copy","numbers","forEach","toMap","blockLong","left","top","right","bottom","ceil","App","james","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAgBaA,EAA2C,SAACC,GACvD,MAQIA,EAPFC,cADF,MACW,GADX,IAQID,EANFE,eAFF,MAEY,aAFZ,IAQIF,EALFG,qBAHF,MAGkB,aAHlB,IAQIH,EAJFI,mBAJF,MAIgB,aAJhB,IAQIJ,EAHFK,iBALF,MAKc,aALd,IAQIL,EAFFM,oBANF,MAMiB,aANjB,IAQIN,EADFO,oBAPF,MAOiB,aAPjB,EAUA,OACE,mCACG,IAAIC,MAAMP,EAAS,GAAGQ,UAAKC,GAAWC,KAAI,SAACC,EAAGC,GAC7C,GAAU,IAANA,EAAS,OAAO,KACpB,IAAMC,EAAQC,EAAQF,GAChBG,EA5BJ,GA4BYF,EAAME,EACdC,EA5BJ,GA4BYH,EAAMG,EACpB,OACE,oBACEC,UAAS,aACTC,UAAS,oBAAeH,EAAf,aAAqBC,EAArB,KAFX,UAKE,sBAAMD,EAAGI,GAAOH,EAAGI,GAAOC,MAAO,CAAEC,iBAAkB,UAArD,SACGV,IAEH,sBACEW,MAxCJ,GAyCIC,OAxCJ,GAyCIvB,QAAS,kBAAMA,EAAQW,IACvBT,YAAa,kBAAMA,EAAYS,IAC/BR,UAAW,kBAAMA,EAAUQ,IAC3BP,aAAc,kBAAMA,EAAaO,IACjCN,aAAc,kBAAMA,EAAaM,IACjCV,cAAe,SAACuB,GACdA,EAAEC,iBACFxB,EAAcU,QAfbA,S,OCnCXO,EAAI,GACJC,EAAI,GAcJO,EAAQ,SAACC,EAAeC,EAAaC,GAA7B,OACZC,KAAKD,IAAID,EAAKE,KAAKF,IAAIC,EAAKF,KAEjBI,EAAQ,SAACjC,GA+BpB,IA9BA,IACEkC,EASElC,EATFkC,MADF,EAUIlC,EARFmC,sBAFF,MAEmB,CAAEX,MAAO,EAAGC,OAAQ,GAFvC,IAUIzB,EAPFE,eAHF,MAGY,aAHZ,IAUIF,EANFG,qBAJF,MAIkB,aAJlB,IAUIH,EALFI,mBALF,MAKgB,aALhB,IAUIJ,EAJFK,iBANF,MAMc,aANd,IAUIL,EAHFM,oBAPF,MAOiB,aAPjB,IAUIN,EAFFO,oBARF,MAQiB,aARjB,IAUIP,EADFoC,mBATF,MASgB,aAThB,EAYQC,EAAqBH,EAArBG,MAAOC,EAAcJ,EAAdI,IAAK7B,EAASyB,EAATzB,KAWZe,EAAkBW,EAAlBX,MAAOC,EAAWU,EAAXV,OACTc,EAAU,SAACvB,EAAWC,GAC1B,IAAMH,EAAQ0B,EAAQxB,EAAGC,EAAGQ,EAAQD,GACpC,OAAOV,GAASuB,GAASvB,GAASwB,GAG9BG,EAAS,GA9B2B,WA+BjC5B,GACP,IAAMC,EAAQC,EAAQF,EAAGY,EAAQD,GAC3BR,EAAII,EAAIN,EAAME,EACdC,EAAII,EAAIP,EAAMG,EACpBwB,EAAOC,KACL,oBAAGxB,UAAS,cAAiBC,UAAS,oBAAeH,EAAf,aAAqBC,EAArB,KAAtC,UACE,sBACEO,MAAOJ,EACPK,OAAQJ,EACRC,MAAO,CAAEb,KAAK,QAAD,OAAUA,EAAK,GAAf,aAAsBA,EAAK,GAA3B,cAAmCA,EAAK,GAAxC,YACbkC,QAAS,SAACjB,GAAD,OA1BCL,EA0BeK,EAAEkB,OA1BNC,EA0BcnB,EAAEoB,OA1BLC,EA0Ba,EAzBnDX,EAAY,2BACPF,GADM,IAETzB,KAAM,CACJmB,EAAMnB,EAAK,GAAKY,EAAG,EAAG,KACtBO,EAAMnB,EAAK,GAAKoC,EAAG,EAAG,KACtBjB,EAAMnB,EAAK,GAAKsC,EAAG,EAAG,SANX,IAAC1B,EAAWwB,EAAWE,GA2BhC7C,QAAS,kBAAMA,EAAQW,IACvBT,YAAa,kBAAMA,EAAYS,IAC/BR,UAAW,kBAAMA,EAAUQ,IAC3BP,aAAc,kBAAMA,EAAaO,IACjCN,aAAc,kBAAMA,EAAaM,IACjCV,cAAe,SAACuB,GACdA,EAAEC,iBACFxB,EAAcU,OAGhB0B,EAAQzB,EAAME,EAAI,EAAGF,EAAMG,IAC3B,sBAAM+B,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI9B,EAAG+B,OAAO,WAEzCb,EAAQzB,EAAME,EAAGF,EAAMG,EAAI,IAC3B,sBAAM+B,GAAI,EAAGC,GAAI,EAAGC,GAAI9B,EAAG+B,GAAI,EAAGC,OAAO,WAEzCb,EAAQzB,EAAME,EAAI,EAAGF,EAAMG,IAC3B,sBAAM+B,GAAI5B,EAAG6B,GAAI,EAAGC,GAAI9B,EAAG+B,GAAI9B,EAAG+B,OAAO,WAEzCb,EAAQzB,EAAME,EAAGF,EAAMG,EAAI,IAC3B,sBAAM+B,GAAI,EAAGC,GAAI5B,EAAG6B,GAAI9B,EAAG+B,GAAI9B,EAAG+B,OAAO,YA1ByBvC,KALjEA,EAAIwB,EAAOxB,GAAKyB,EAAKzB,IAAM,EAA3BA,GAoCT,OAAO,mCAAG4B,KC5ENY,EAAY,SAACtB,GAAD,OAAiBC,KAAKsB,MAAMtB,KAAKuB,SAAWxB,IACxDyB,EAAW,SAACnB,EAAeC,EAAa7B,GAA7B,MAAwD,CACvEgD,GAAIzB,KAAKsB,MAAsB,IAAhBtB,KAAKuB,UACpBlB,QACAC,MACA7B,KAAMA,GAAQ,CAAC4C,EAAU,KAAM,IAAK,MAOzBK,EAAU,SAAC1D,GACtB,IAAQC,EAAWD,EAAXC,OACR,EAA4B0D,mBAAqB3D,EAAM4D,QAAU,IAAjE,mBAAOA,EAAP,KAAeC,EAAf,KAEA,EAAwBF,mBAAwC,MAAhE,mBAAOG,EAAP,KAAaC,EAAb,KACMC,EAAYF,IAASA,EAAK,IAAMA,EAAK,GAAKA,EAAK,GAAKA,EAAK,IACzDG,EAAUH,IAASA,EAAK,IAAMA,EAAK,GAAKA,EAAK,GAAKA,EAAK,IAE7DI,qBAAU,WACRC,OAAOC,iBAAiB,WAAW,kBAAML,EAAQ,YAEnD,IAAMM,EAAW,SAACnC,GAChB2B,GAAU,SAACD,GAAD,4BAAgBA,GAAhB,CAAwB1B,QAE9BoC,EAAa,SAACzD,GAAD,OACjBiD,GAAQC,GAAQ,SAACQ,GAAD,OAASA,GAAO,CAACT,EAAK,GAAIjD,EAAG0D,EAAI,QACnD,OACE,qCACE,cAAC,EAAD,CACEtE,OAAQA,EACRC,QAAS,SAACW,GAAD,OAAOwD,EAASb,EAAS3C,EAAGA,EAAI,KACzCV,cAAe,SAACU,GAAD,OAAO2D,QAAQC,IAAI5D,EAAG,eACrCT,YAAa,SAACS,GAAD,OAAOkD,EAAQ,CAAClD,EAAGA,EAAG,CAACwC,EAAU,KAAM,IAAK,OACzD/C,aAAcgE,IAEfV,EAAOjD,KAAI,SAACuB,EAAOwC,GAAR,OACV,cAAC,EAAD,CAEExC,MAAOA,EACPE,YAAa,SAACF,GAAD,OACX2B,GAAU,SAACD,GAAD,4BACLA,EAAOe,MAAM,EAAGD,IADX,CAERxC,GAFQ,YAGL0B,EAAOe,MAAMD,EAAQ,SAG5BxE,QAAS,SAACW,GAAD,OACPgD,GAAU,SAACD,GAAD,4BACLA,EAAOe,MAAM,EAAGD,IADX,YAELd,EAAOe,MAAMD,EAAQ,UAZvBxC,EAAMuB,OAiBdK,GAAQE,GAAaC,GACpB,cAAC,EAAD,CACE/B,MAAO,CAAEuB,GAAI,EAAGpB,MAAO2B,EAAW1B,IAAK2B,EAASxD,KAAMqD,EAAK,IAC3DzD,UAAW,kBACTgE,EAASb,EAASQ,GAAa,EAAGC,GAAW,EAAGH,EAAK,MAEvDxD,aAAcgE,QCnElBM,EAAgB,SAACjE,EAAgBK,EAAWC,GAChD,OAAKN,EAAIK,IAAOL,EAAIK,GAAGC,GAChBN,EAAIK,GAAGC,GADoB,CAAEJ,GAAI,EAAGqB,MAAO,IAwBvC2C,EAAU,WACrB,IAZCC,EAYK1D,EAAI,GACJC,EAAI,GACV,EAAgCsC,oBAAS,iBAAM,CAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxE,EAAG,EAAG,MAFR,mBAAOoB,EAAP,KAAiBC,EAAjB,KAIMC,GAlBLH,EAkBmCC,EAjBpC,SAACG,EAAWC,GACV,GAAIL,EAAII,KAAOJ,EAAIK,GAAI,OAAO,EAG9B,IAFA,IACMC,EAASF,EAAIC,EAAIA,EAAID,EAClBrE,EAFOqE,EAAIC,EAAID,EAAIC,EAENtE,EAAIuE,EAAQvE,IAChC,GAAIiE,EAAIjE,KAAOiE,EAAII,GAAI,OAAO,EAEhC,OAAO,IAYHG,EACJ,SAACxE,EAAWD,GAAZ,OAA0B,SAACc,GAAD,OACxBsD,GAAY,SAACT,GACX7C,EAAEC,iBACF,IAAM2D,EAAOf,EAAII,QAEjB,OADAW,EAAKzE,GAAKyE,EAAKzE,GAAKD,EACb0E,OAEP3E,EAtCM,SAAC4E,EAAmBlE,EAAYD,GAC5C,IAAMT,EAAiB,GAMvB,OALA4E,EAAQC,SAAQ,SAACtD,EAAOwC,GACtB,MAAiB3D,EAAQ2D,EAAOrD,EAAGD,GAA3BJ,EAAR,EAAQA,EAAGC,EAAX,EAAWA,EACNN,EAAIK,KAAIL,EAAIK,GAAK,IACtBL,EAAIK,GAAGC,GAAK,CAAEJ,EAAG6D,EAAOxC,YAEnBvB,EA+BK8E,CAAMV,EAAU,KAE5B,OACE,mCACGA,EAASpE,KAAI,SAACC,EAAGC,GAChB,GAAU,IAANA,EAAS,OAAO,KACpB,IAAMC,EAAQC,EAAQF,GAChB6E,EAAY3E,EAAQF,EAAG,KACvBG,EAAII,EAAIN,EAAME,EACdC,EAAII,EAAIP,EAAMG,EACd0E,EAAOf,EAAcjE,EAAK+E,EAAU1E,EAAI,EAAG0E,EAAUzE,GACrD2E,EAAMhB,EAAcjE,EAAK+E,EAAU1E,EAAG0E,EAAUzE,EAAI,GACpD4E,EAAQjB,EAAcjE,EAAK+E,EAAU1E,EAAI,EAAG0E,EAAUzE,GACtD6E,EAASlB,EAAcjE,EAAK+E,EAAU1E,EAAG0E,EAAUzE,EAAI,GAC7D,OACE,oBACEC,UAAS,gBAAW6D,EAASlE,GAAK,WAAaD,EAAI,IACnDO,UAAS,oBAAeH,EAAf,aAAqBC,EAArB,KACTf,QAASmF,EAAWxE,EAAG,GACvBV,cAAekF,EAAWxE,GAAI,GAJhC,UAOE,sBAAMW,MAAOJ,EAAGK,OAAQJ,IACvB0D,EAASlE,MAAQ8E,EAAKzD,QAAU+C,EAAapE,EAAG8E,EAAK9E,KACpD,sBAAMmC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI9B,EAAG+B,OAAO,UAE1C2B,EAASlE,MAAQ+E,EAAI1D,QAAU+C,EAAapE,EAAG+E,EAAI/E,KAClD,sBAAMmC,GAAI,EAAGC,GAAI,EAAGC,GAAI9B,EAAG+B,GAAI,EAAGC,OAAO,UAE1C2B,EAASlE,MAAQgF,EAAM3D,QAAU+C,EAAapE,EAAGgF,EAAMhF,KACtD,sBAAMmC,GAAI5B,EAAG6B,GAAI,EAAGC,GAAI9B,EAAG+B,GAAI9B,EAAG+B,OAAO,UAE1C2B,EAASlE,MAAQiF,EAAO5D,QAAU+C,EAAapE,EAAGiF,EAAOjF,KACxD,sBAAMmC,GAAI,EAAGC,GAAI5B,EAAG6B,GAAI9B,EAAG+B,GAAI9B,EAAG+B,OAAO,UAE3C,sBAAMpC,EAAGI,GAAOH,EAAGI,GAAOC,MAAO,CAAEC,iBAAkB,UAArD,SACGV,MAhBEA,S,OCvBV,IAAME,EAAU,SAACF,GAAD,IAAYQ,EAAZ,uDAAgB,EAAGD,EAAnB,uDAAuB,EAAvB,MAA8B,CACnDJ,GAAKH,EAAI,GAAKO,GAAMY,KAAK+D,KAAKlF,GAAKO,EAAIC,IAAM,GAAKD,EAClDH,EAAGe,KAAK+D,OAAQlF,EAAI,IAAMO,EAAIC,GAAM,GAAKD,GAAK,IAEnCoB,EAAU,SAACxB,EAAWC,GAAZ,IAAuBI,EAAvB,uDAA2B,EAAGD,EAA9B,uDAAkC,EAAlC,OACrBA,EAAIC,EAAIW,KAAKsB,MAAMtC,EAAII,GAAKA,EAAIH,EAAKD,EAAII,EAAK,GAEjC4E,EAhDf,WACE,OACE,sBAAK9E,UAAU,MAAMI,MAAO,CAAEG,OAAQ,SAAtC,UACE,qBAAKP,UAAU,QAAf,SACE,sBAAKM,MAAM,OAAOC,OAAO,OAAzB,UACE,mBAAGN,UAAS,sBAAZ,SACE,cAAC,EAAD,MAEF,mBAAGA,UAAS,oBAAZ,SACE,cAAC,EAAD,CAASlB,OAAQ,GAAI2D,OAAQqC,EAAM,OAErC,mBAAG9E,UAAS,qBAAZ,SACE,cAAC,EAAD,CAASlB,OAAQ,GAAI2D,OAAQqC,EAAM,OAErC,mBAAG9E,UAAS,qBAAZ,SACE,cAAC,EAAD,CAASlB,OAAQ,GAAI2D,OAAQqC,EAAM,OAErC,mBAAG9E,UAAS,sBAAZ,SACE,cAAC,EAAD,CAASlB,OAAQ,GAAI2D,OAAQqC,EAAM,OAErC,mBAAG9E,UAAS,sBAAZ,SACE,cAAC,EAAD,CAASlB,OAAQ,GAAI2D,OAAQqC,EAAM,YAIzC,oBAAI3E,MAAO,CAAE4E,UAAW,GAAxB,6BChBSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.fef1adfd.chunk.js","sourcesContent":["import React from \"react\";\nimport { blockXY } from \"../App\";\nimport \"./Map.css\";\n\nconst w = 50;\nconst h = 50;\n\ninterface GridProps {\n  length?: number;\n  onClick?: (blockNumber: number) => any;\n  onContextMenu?: (blockNumber: number) => any;\n  onMouseDown?: (blockNumber: number) => any;\n  onMouseUp?: (blockNumber: number) => any;\n  onMouseEnter?: (blockNumber: number) => any;\n  onMouseLeave?: (blockNumber: number) => any;\n}\nexport const Grid: React.FunctionComponent<GridProps> = (props) => {\n  const {\n    length = 27,\n    onClick = () => {},\n    onContextMenu = () => {},\n    onMouseDown = () => {},\n    onMouseUp = () => {},\n    onMouseEnter = () => {},\n    onMouseLeave = () => {},\n  } = props;\n\n  return (\n    <>\n      {new Array(length + 1).fill(undefined).map((v, i) => {\n        if (i === 0) return null;\n        const block = blockXY(i);\n        const x = w * block.x;\n        const y = h * block.y;\n        return (\n          <g\n            className={`grid-block`}\n            transform={`translate(${x}, ${y})`}\n            key={i}\n          >\n            <text x={w / 2} y={h / 2} style={{ dominantBaseline: \"middle\" }}>\n              {i}\n            </text>\n            <rect\n              width={w}\n              height={h}\n              onClick={() => onClick(i)}\n              onMouseDown={() => onMouseDown(i)}\n              onMouseUp={() => onMouseUp(i)}\n              onMouseEnter={() => onMouseEnter(i)}\n              onMouseLeave={() => onMouseLeave(i)}\n              onContextMenu={(e) => {\n                e.preventDefault();\n                onContextMenu(i);\n              }}\n            />\n          </g>\n        );\n      })}\n    </>\n  );\n};\n","import { blockOf, blockXY, GridDimention } from \"../App\";\nimport { GroupObj } from \"./Chapter\";\n\nconst w = 50;\nconst h = 50;\n\ninterface GroupProps {\n  group: GroupObj;\n  groupDimension?: GridDimention;\n  onClick?: (i: number) => any;\n  onContextMenu?: (blockNumber: number) => any;\n  onMouseDown?: (blockNumber: number) => any;\n  onMouseUp?: (blockNumber: number) => any;\n  onMouseEnter?: (blockNumber: number) => any;\n  onMouseLeave?: (blockNumber: number) => any;\n  updateGroup?: (group: GroupObj) => any;\n}\n\nconst clamp = (value: number, min: number, max: number) =>\n  Math.max(min, Math.min(max, value));\n\nexport const Group = (props: GroupProps) => {\n  const {\n    group,\n    groupDimension = { width: 2, height: 5 },\n    onClick = () => {},\n    onContextMenu = () => {},\n    onMouseDown = () => {},\n    onMouseUp = () => {},\n    onMouseEnter = () => {},\n    onMouseLeave = () => {},\n    updateGroup = () => {},\n  } = props;\n\n  const { start, end, fill } = group;\n\n  const editFill = (h: number, s: number, l: number) =>\n    updateGroup({\n      ...group,\n      fill: [\n        clamp(fill[0] + h, 0, 360),\n        clamp(fill[1] + s, 0, 100),\n        clamp(fill[2] + l, 0, 100),\n      ],\n    });\n  const { width, height } = groupDimension;\n  const inGroup = (x: number, y: number) => {\n    const block = blockOf(x, y, height, width);\n    return block >= start && block <= end;\n  };\n\n  const blocks = [];\n  for (let i = start; i <= end; i++) {\n    const block = blockXY(i, height, width);\n    const x = w * block.x;\n    const y = h * block.y;\n    blocks.push(\n      <g className={`group-block`} transform={`translate(${x}, ${y})`} key={i}>\n        <rect\n          width={w}\n          height={h}\n          style={{ fill: `hsla(${fill[0]}, ${fill[1]}%, ${fill[2]}%, 0.8)` }}\n          onWheel={(e) => editFill(e.deltaY, e.deltaX, 0)}\n          onClick={() => onClick(i)}\n          onMouseDown={() => onMouseDown(i)}\n          onMouseUp={() => onMouseUp(i)}\n          onMouseEnter={() => onMouseEnter(i)}\n          onMouseLeave={() => onMouseLeave(i)}\n          onContextMenu={(e) => {\n            e.preventDefault();\n            onContextMenu(i);\n          }}\n        />\n        {!inGroup(block.x - 1, block.y) && (\n          <line x1={0} y1={0} x2={0} y2={h} stroke=\"black\" />\n        )}\n        {!inGroup(block.x, block.y - 1) && (\n          <line x1={0} y1={0} x2={w} y2={0} stroke=\"black\" />\n        )}\n        {!inGroup(block.x + 1, block.y) && (\n          <line x1={w} y1={0} x2={w} y2={h} stroke=\"black\" />\n        )}\n        {!inGroup(block.x, block.y + 1) && (\n          <line x1={0} y1={h} x2={w} y2={h} stroke=\"black\" />\n        )}\n      </g>\n    );\n  }\n  return <>{blocks}</>;\n};\n","import { useEffect, useState } from \"react\";\nimport { Grid } from \"./Grid\";\nimport { Group } from \"./Group\";\n\ntype Fill = [number, number, number];\nexport interface GroupObj {\n  id: number;\n  start: number;\n  end: number;\n  fill: Fill;\n}\n\nconst randomInt = (max: number) => Math.floor(Math.random() * max);\nconst newGroup = (start: number, end: number, fill?: Fill): GroupObj => ({\n  id: Math.floor(Math.random() * 100000),\n  start,\n  end,\n  fill: fill || [randomInt(360), 100, 90],\n});\n\ninterface ChapterProps {\n  length: number;\n  groups?: GroupObj[];\n}\nexport const Chapter = (props: ChapterProps) => {\n  const { length } = props;\n  const [groups, setGroups] = useState<GroupObj[]>(props.groups || []);\n\n  const [drag, setDrag] = useState<[number, number, Fill] | null>(null);\n  const dragStart = drag && (drag[0] <= drag[1] ? drag[0] : drag[1]);\n  const dragEnd = drag && (drag[0] <= drag[1] ? drag[1] : drag[0]);\n\n  useEffect(() => {\n    window.addEventListener(\"mouseup\", () => setDrag(null));\n  });\n  const addGroup = (group: GroupObj) => {\n    setGroups((groups) => [...groups, group]);\n  };\n  const updateDrag = (i: number) =>\n    drag && setDrag((old) => old && [drag[0], i, old[2]]);\n  return (\n    <>\n      <Grid\n        length={length}\n        onClick={(i) => addGroup(newGroup(i, i + 1))}\n        onContextMenu={(i) => console.log(i, \"right grid\")}\n        onMouseDown={(i) => setDrag([i, i, [randomInt(360), 100, 90]])}\n        onMouseEnter={updateDrag}\n      />\n      {groups.map((group, index) => (\n        <Group\n          key={group.id}\n          group={group}\n          updateGroup={(group) =>\n            setGroups((groups) => [\n              ...groups.slice(0, index),\n              group,\n              ...groups.slice(index + 1),\n            ])\n          }\n          onClick={(i) =>\n            setGroups((groups) => [\n              ...groups.slice(0, index),\n              ...groups.slice(index + 1),\n            ])\n          }\n        />\n      ))}\n      {drag && dragStart && dragEnd && (\n        <Group\n          group={{ id: 0, start: dragStart, end: dragEnd, fill: drag[2] }}\n          onMouseUp={() =>\n            addGroup(newGroup(dragStart || 0, dragEnd || 0, drag[2]))\n          }\n          onMouseEnter={updateDrag}\n        />\n      )}\n    </>\n  );\n};\n","import { useState } from \"react\";\nimport { blockXY } from \"./App\";\n\ninterface Block {\n  i: number;\n  group: number;\n}\nconst blockSelected = (map: Block[][], x: number, y: number): Block => {\n  if (!map[x] || !map[x][y]) return { i: -1, group: 0 };\n  return map[x][y];\n};\nconst toMap = (numbers: number[], h?: number, w?: number) => {\n  const map: Block[][] = [];\n  numbers.forEach((group, index) => {\n    const { x, y } = blockXY(index, h, w);\n    if (!map[x]) map[x] = [];\n    map[x][y] = { i: index, group };\n  });\n  return map;\n};\nconst areConnectedIn =\n  (arr: number[]) =>\n  (a: number, b: number): boolean => {\n    if (arr[a] !== arr[b]) return false;\n    const smaller = a < b ? a : b;\n    const bigger = a < b ? b : a;\n    for (let i = smaller; i < bigger; i++) {\n      if (arr[i] !== arr[a]) return false;\n    }\n    return true;\n  };\n\nexport const OldGrid = () => {\n  const w = 50;\n  const h = 50;\n  const [selected, setSelected] = useState(() => [\n    0, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 2, 1, 2, 2, 2,\n    2, 1, 1,\n  ]);\n  const areConnected = areConnectedIn(selected);\n\n  const incElement =\n    (i: number, v: number) => (e: React.MouseEvent<SVGGElement, MouseEvent>) =>\n      setSelected((old) => {\n        e.preventDefault();\n        const copy = old.slice();\n        copy[i] = copy[i] + v;\n        return copy;\n      });\n  const map = toMap(selected, 1000);\n\n  return (\n    <>\n      {selected.map((v, i) => {\n        if (i === 0) return null;\n        const block = blockXY(i);\n        const blockLong = blockXY(i, 1000);\n        const x = w * block.x;\n        const y = h * block.y;\n        const left = blockSelected(map, blockLong.x - 1, blockLong.y);\n        const top = blockSelected(map, blockLong.x, blockLong.y - 1);\n        const right = blockSelected(map, blockLong.x + 1, blockLong.y);\n        const bottom = blockSelected(map, blockLong.x, blockLong.y + 1);\n        return (\n          <g\n            className={`hover ${selected[i] ? \"selected\" + v : \"\"}`}\n            transform={`translate(${x}, ${y})`}\n            onClick={incElement(i, 1)}\n            onContextMenu={incElement(i, -1)}\n            key={i}\n          >\n            <rect width={w} height={h} />\n            {selected[i] && (!left.group || !areConnected(i, left.i)) && (\n              <line x1={0} y1={0} x2={0} y2={h} stroke=\"black\" />\n            )}\n            {selected[i] && (!top.group || !areConnected(i, top.i)) && (\n              <line x1={0} y1={0} x2={w} y2={0} stroke=\"black\" />\n            )}\n            {selected[i] && (!right.group || !areConnected(i, right.i)) && (\n              <line x1={w} y1={0} x2={w} y2={h} stroke=\"black\" />\n            )}\n            {selected[i] && (!bottom.group || !areConnected(i, bottom.i)) && (\n              <line x1={0} y1={h} x2={w} y2={h} stroke=\"black\" />\n            )}\n            <text x={w / 2} y={h / 2} style={{ dominantBaseline: \"middle\" }}>\n              {i}\n            </text>\n          </g>\n        );\n      })}\n    </>\n  );\n};\n","import \"./App.css\";\nimport { Chapter } from \"./map/Chapter\";\nimport { OldGrid } from \"./OldGrid\";\nimport james from \"./data/james.json\";\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ height: \"100vh\" }}>\n      <div className=\"board\">\n        <svg width=\"100%\" height=\"100%\">\n          <g transform={`translate(5000, 50)`}>\n            <OldGrid />\n          </g>\n          <g transform={`translate(50, 50)`}>\n            <Chapter length={27} groups={james[0] as any} />\n          </g>\n          <g transform={`translate(400, 50)`}>\n            <Chapter length={26} groups={james[1] as any} />\n          </g>\n          <g transform={`translate(50, 350)`}>\n            <Chapter length={18} groups={james[2] as any} />\n          </g>\n          <g transform={`translate(275, 350)`}>\n            <Chapter length={17} groups={james[3] as any} />\n          </g>\n          <g transform={`translate(500, 350)`}>\n            <Chapter length={20} groups={james[4] as any} />\n          </g>\n        </svg>\n      </div>\n      <h2 style={{ marginTop: 0 }}>Chapter map</h2>\n    </div>\n  );\n}\n\n// Add classes to make css easy\n//   hover for square\n//   hover for group\n// add x\n// color wheel\n// make nice animated hover expand thing\n\nexport interface GridDimention {\n  width: number;\n  height: number;\n}\nexport const blockXY = (i: number, h = 5, w = 2) => ({\n  x: ((i - 1) % w) + (Math.ceil(i / (w * h)) - 1) * w,\n  y: Math.ceil((((i - 1) % (w * h)) + 1) / w) - 1,\n});\nexport const blockOf = (x: number, y: number, h = 5, w = 2) =>\n  w * h * Math.floor(x / w) + w * y + (x % w) + 1;\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}